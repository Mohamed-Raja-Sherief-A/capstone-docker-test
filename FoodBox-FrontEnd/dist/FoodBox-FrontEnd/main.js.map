{"version":3,"sources":["./src/app/component/admin/material-module.module.ts","./src/app/component/admin/user-management/user-management.component.html","./src/app/component/admin/user-management/user-management.component.ts","./src/app/component/admin/offer-management/add-offer/add-offer.component.ts","./src/app/component/admin/offer-management/add-offer/add-offer.component.html","./src/environments/environment.ts","./src/app/service/session/session.service.ts","./src/app/component/admin/view-product/view-product.component.html","./src/app/component/admin/view-product/view-product.component.ts","./src/app/component/admin/admin-nav/admin-nav.component.ts","./src/app/component/admin/admin-nav/admin-nav.component.html","./src/app/service/product/productservice.service.ts","./src/app/component/admin/edit-product/edit-product.component.ts","./src/app/component/admin/edit-product/edit-product.component.html","./src/app/component/admin/view-product/product/product.component.ts","./src/app/component/admin/view-product/product/product.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/component/admin/admin.module.ts","./src/app/service/user/userservice.service.ts","./src/app/component/admin/password-management/password-management.component.ts","./src/app/component/admin/password-management/password-management.component.html","./src/app/component/admin/offer-management/offer-management.component.ts","./src/app/component/admin/offer-management/offer-management.component.html","./src/app/app.module.ts","./src/app/component/admin/home/home.component.ts","./src/app/component/admin/home/home.component.html","./src/app/component/admin/admin-routing.module.ts","./src/app/component/admin/admin.component.ts","./src/app/component/admin/admin.component.html","./src/app/app-routing.module.ts","./src/app/material-module/material-module.module.ts","./src/app/component/admin/offer-management/view-offer/view-offer.component.html","./src/app/component/admin/offer-management/view-offer/view-offer.component.ts","./src/app/service/offer/offerservice.service.ts","./src/app/component/admin/add-product/add-product.component.ts","./src/app/component/admin/add-product/add-product.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACU;AACD;AACL;AACM;AACD;AACJ;AACF;AACqB;AACd;AACa;AACX;AACa;AACjB;AACQ;AACN;AACI;AACM;AACR;AACE;AACI;AACD;AACT;AACE;AACF;AACA;AACuB;AACb;AACK;AACQ;AACrB;AACE;AACE;AACF;AACW;AACN;AACT;AACE;AACF;AACM;AACA;AACN;AACF;;AAmD5C,MAAM,oBAAoB;;wFAApB,oBAAoB;oGAApB,oBAAoB;wGA/C7B,4DAAU;QACV,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qEAAc;QACd,oFAAqB;QACrB,sEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,6EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB,uEAAc;QACd,uEAAe;QACf,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,oFAAoB;QACpB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,mEAAa;QACb,gEAAY;QACZ,sEAAe;oIAIN,oBAAoB,cA/C7B,4DAAU;QACV,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qEAAc;QACd,oFAAqB;QACrB,sEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,6EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB,uEAAc;QACd,uEAAe;QACf,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,oFAAoB;QACpB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,mEAAa;QACb,gEAAY;QACZ,sEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICpFC,iFAA2E;IAAA,uDAAiB;IAAA,4DAAa;;;IAAtD,mFAAuB;IAAC,0DAAiB;IAAjB,iFAAiB;;;IAchG,qEAA6C;IACzC,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAA0B;IAAA,4DAAK;IACnC,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACrC,4DAAK;;;;IALG,0DAAO;IAAP,yEAAO;IACP,0DAAsB;IAAtB,sFAAsB;IACtB,0DAA0B;IAA1B,0FAA0B;IAC1B,0DAAwB;IAAxB,wFAAwB;IACxB,0DAAwB;IAAxB,wFAAwB;;;IANpC,wEAA+B;IAC3B,4HAMK;IACT,4DAAQ;;;IAPkB,0DAAU;IAAV,kFAAU;;;IASxC,0EAAmD;IAAA,0EAAe;IAAA,4DAAM;;ACnBzE,MAAM,uBAAuB;IAIlC,YAAoB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAH9C,SAAI,GAAQ,EAAE,CAAC;QACf,UAAK,GAAQ,EAAE,CAAC;QAChB,WAAM,GAAS,EAAE,CAAC;IACgC,CAAC;IAEnD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAC/B,KAAK,GAAE,KAAI,CAAC,KAAK,GAAC,KAAK,CACxB,CAAC;IACJ,CAAC;IACD,QAAQ,CAAC,IAAW;QAClB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,CACpC,MAAM,GAAE,KAAI,CAAC,MAAM,GAAC,MAAM,CAC3B,CAAC;IACJ,CAAC;;8FAhBU,uBAAuB;uGAAvB,uBAAuB;QDVpC,yEAAuB;QACnB,wEAA6B;QAAA,0EAAe;QAAA,4DAAK;QACjD,yEAA8B;QAC1B,oFAAkC;QAC9B,4EAAW;QAAA,oEAAS;QAAA,4DAAY;QAC5B,gFAAwD;QAA3C,6KAAmB,0BAAsB,IAAC;QACnD,iIAAyG;QAC7G,4DAAa;QACrB,4DAAiB;QACjB,2EAA6C;QACzC,yEAAO;QACL,sEAAI;QACF,yEAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,yEAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,yEAAgB;QAAA,oEAAQ;QAAA,4DAAK;QAC7B,yEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,yEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC7B,4DAAK;QACP,4DAAQ;QACR,yHAQQ;QACZ,4DAAQ;QACR,qHAAwE;QAC5E,4DAAM;QACV,4DAAM;;QAzB2C,0DAAS;QAAT,8EAAS;QAatC,2DAAqB;QAArB,uFAAqB;QAUP,0DAAuB;QAAvB,yFAAuB;;;;;;;;;;;;;;AE5BzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;ICYhE,yEAAsC;IAClC,iFAA0D;IAC9D,4DAAM;;ADLH,MAAM,iBAAiB;IAM5B,YAAoB,OAA2B;QAA3B,YAAO,GAAP,OAAO,CAAoB;QAL/C,YAAO,GAAS,KAAK,CAAC;QACtB,cAAS,GAAW,IAAI,wDAAS,CAAC;YAChC,IAAI,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC5C,KAAK,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SAC9C,CAAC,CAAC;IACgD,CAAC;IAEpD,QAAQ;IACR,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;QAClB,IAAI,KAAK,GAAO;YACd,GAAG,EAAC,CAAC,CAAC;YACN,IAAI,EAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;YACrC,KAAK,EAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK;SACxC;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CACpC,GAAE,EAAE;YACF,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;YACnB,KAAK,CAAC,0BAA0B,CAAC,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,CACF;IACH,CAAC;;kFAxBU,iBAAiB;iGAAjB,iBAAiB;QCV9B,wEAA6B;QAAA,uEAAY;QAAA,4DAAK;QAC9C,0EAAoD;QAAtB,6IAAY,YAAQ,IAAC;QAC/C,yEAAsB;QAClB,kEACA;QAAA,sEAA0C;QAC9C,4DAAM;QACN,yEAAsB;QAClB,mEACA;QAAA,sEAA2C;QAC/C,4DAAM;QACN,yEAAiB;QACjB,6EAAiG;QAAA,kEAAM;QAAA,4DAAS;QAChH,4DAAM;QACN,+GAEM;QACV,4DAAO;;QAfD,0DAAuB;QAAvB,oFAAuB;QAU0C,0DAA6B;QAA7B,0FAA6B;QAEzE,0DAAa;QAAb,6EAAa;;;;;;;;;;;;;;ACbxC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAuC;;AAQhC,MAAM,cAAc;IAOzB;QANA,SAAI,GAAM,IAAI,CAAC;QACf,gBAAW,GAAuB,IAAI,oDAAe,CAAO,IAAI,CAAC,IAAI,CAAC,CAAC;QACvE,SAAI,GAAQ,EAAE,CAAC;QACf,gBAAW,GAAyB,IAAI,oDAAe,CAAS,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3E,WAAM,GAAQ,CAAC,CAAC;QAChB,gBAAW,GAAyB,IAAI,oDAAe,CAAS,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7D,CAAC;IACjB,UAAU,CAAC,IAAS;QAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IACD,OAAO,CAAC,OAAe,EAAC,OAAc;QACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,OAAO,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,OAAO,EAAC,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IACD,UAAU,CAAC,CAAQ;QACjB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IACD,UAAU;QACT,IAAI,CAAC,IAAI,GAAC,EAAE,CAAC;QACb,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;;4EAtBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;ICLhB,yEAAmC;IAC/B,4EAAuC;IAC3C,4DAAM;;;IAEF,yEAAwE;IACpE,4EAA+C;IACnD,4DAAM;;;IADW,0DAAmB;IAAnB,+EAAmB;;ACErC,MAAM,oBAAoB;IAG/B,YAAoB,OAA6B;QAA7B,YAAO,GAAP,OAAO,CAAsB;QAFjD,YAAO,GAAS,IAAI,CAAC;QACrB,aAAQ,GAAW,EAAE,CAAC;IAC+B,CAAC;IAEtD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,CAClC,QAAQ,GAAE,KAAI,CAAC,QAAQ,GAAC,QAAQ,EAChC,GAAG,GAAE,QAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EACrB,GAAE,EAAE,KAAI,CAAC,OAAO,GAAC,KAAK,CACvB,CAAC;IACJ,CAAC;;wFAXU,oBAAoB;oGAApB,oBAAoB;QDTjC,yEAAmC;QAC/B,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,gHAEM;QACP,yEAAsB;QACjB,gHAEM;QACV,4DAAM;QACV,4DAAM;;QARkB,0DAAa;QAAb,6EAAa;QAIkB,0DAAY;QAAZ,iFAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEG5D,MAAM,iBAAiB;IAE5B,YAAoB,OAAsB,EAAS,MAAa;QAA5C,YAAO,GAAP,OAAO,CAAe;QAAS,WAAM,GAAN,MAAM,CAAO;IAAI,CAAC;IAErE,QAAQ;IACR,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;;kFATU,iBAAiB;iGAAjB,iBAAiB;QCR9B,yEAA2D;QACvD,yEAAuB;QAErB,uEAAiC;QAAA,oEAAiD;QAAA,gEAAK;QAAA,4DAAI;QAC3F,4EAAkL;QAChL,qEAAyC;QAC3C,4DAAS;QACT,yEAAyE;QACvE,wEAAgB;QACd,wEAAqB;QACnB,wEAAuE;QAAA,gEAAI;QAAA,4DAAI;QACjF,4DAAK;QACL,0EAA8B;QAC5B,yEAA+H;QAC7H,6EACF;QAAA,4DAAI;QACJ,0EAA2D;QACzD,sEAAI;QAAA,yEAAuD;QAAA,uEAAW;QAAA,4DAAI;QAAA,4DAAK;QAC/E,sEAAI;QAAA,yEAAwD;QAAA,qEAAS;QAAA,4DAAI;QAAA,4DAAK;QAEhF,4DAAK;QACP,4DAAK;QACL,yEAAqB;QACnB,yEAA6C;QAAA,2EAAe;QAAA,4DAAI;QAClE,4DAAK;QACL,yEAAqB;QACnB,yEAAsD;QAAA,2EAAe;QAAA,4DAAI;QAC3E,4DAAK;QACL,yEAAqB;QACnB,yEAA6C;QAAA,4EAAgB;QAAA,4DAAI;QACnE,4DAAK;QACL,yEAAqB;QACnB,yEAA8D;QAApB,qIAAS,YAAQ,IAAC;QAAE,kEAAM;QAAA,4DAAI;QAC1E,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA3BmD,2DAAuB;QAAvB,6IAAuB;QAOvC,0DAA6B;QAA7B,6IAA6B;QAC7B,0DAA8B;QAA9B,6IAA8B;QAKzC,0DAAwB;QAAxB,6IAAwB;QAGxB,0DAAiC;QAAjC,8IAAiC;QAGjC,0DAAwB;QAAxB,8IAAwB;;;;;;;;;;;;;;;;;;;;ACtBjD,MAAM,qBAAqB;IAEhC,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QADpC,YAAO,GAAQ,kCAAkC;IACT,CAAC;IAExC,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IACpD,CAAC;IACD,WAAW,CAAC,OAAe,EAAC,IAAS;QACnC,MAAM,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;QAClC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,UAAU,CAAC,MAAM,CAAC,SAAS,EAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QACtD,+CAA+C;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,IAAI,CAAC,OAAO,EAAC,UAAU,CAAC,CAAC;IACzD,CAAC;IACD,aAAa,CAAC,OAAe;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IACD,UAAU,CAAC,EAAS;QAElB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;;0FApBQ,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;;;;;ICUpD,sEAA0D;IAAA,gFAAqB;IAAA,4DAAM;;;IAejF,sEAA8D;IAAA,oFAAyB;IAAA,4DAAM;;;IASjG,sEAA4D;IAAA,kFAAuB;IAAA,4DAAM;;ADxBlG,MAAM,oBAAoB;IAI/B,YAAoB,MAAqB,EAAS,KAAY,EAAS,OAA6B;QAAhF,WAAM,GAAN,MAAM,CAAe;QAAS,UAAK,GAAL,KAAK,CAAO;QAAS,YAAO,GAAP,OAAO,CAAsB;QACpG,gBAAW,GAAW,IAAI,wDAAS,CAAC;YAClC,IAAI,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC5C,QAAQ,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAChD,MAAM,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACnE,CAAC,CAAC;IALqG,CAAC;IAMzG,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAC1B,MAAM,GAAE,KAAI,CAAC,EAAE,GAAC,MAAM,CAAC,IAAI,CAAC,CAC7B,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CACzC,OAAO,GAAE,KAAI,CAAC,OAAO,GAAC,OAAO,EAC7B,GAAG,GAAE,MAAK,CAAC,aAAa,CAAC,EACzB,GAAE,EAAE;YACF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;gBACzB,IAAI,EAAC,IAAI,CAAC,OAAO,CAAC,IAAI;gBACtB,QAAQ,EAAC,IAAI,CAAC,OAAO,CAAC,QAAQ;gBAC9B,MAAM,EAAC,IAAI,CAAC,OAAO,CAAC,MAAM;aAC1B,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,GAAC,yBAAyB,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;QAC1D,CAAC,CACD,CAAC;IACJ,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,IAAI,GAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QACzD,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAChD,GAAE,EAAE;YACF,KAAK,CAAC,8BAA8B,CAAC,CAAC;YACtC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAC3B,CAAC,CACF;IACH,CAAC;IAED,IAAI;QACF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAC,aAAa,CAAC,CAAC;IAC/C,CAAC;;wFAzCU,oBAAoB;oGAApB,oBAAoB;QCXjC,yEAAmC;QAC/B,wEAAiB;QAAA,+EAAoB;QAAA,4DAAK;QAC1C,yEAAyB;QACrB,oEAA+C;QACnD,4DAAM;QACN,0EAAmE;QAAtB,gJAAY,YAAQ,IAAC;QAClE,yEAA8B;QAC1B,iFAAgB;QACZ,4EAAW;QAAA,uEAAY;QAAA,4DAAY;QACnC,uEAAoE;QACpE,6EAAW;QACP,kHAAqF;QACzF,4DAAY;QAChB,4DAAiB;QACrB,4DAAM;QACN,0EAA+B;QAC3B,qFAAkC;QAC9B,6EAAW;QAAA,6EAAiB;QAAA,4DAAY;QACpC,iFAAwC;QACpC,kFAAgC;QAAA,uEAAW;QAAA,4DAAa;QACxD,kFAA4B;QAAA,mEAAO;QAAA,4DAAa;QAChD,kFAA4B;QAAA,mEAAO;QAAA,4DAAa;QAChD,kFAA4B;QAAA,mEAAO;QAAA,4DAAa;QAChD,kFAA2B;QAAA,kEAAM;QAAA,4DAAa;QAClD,4DAAa;QACb,6EAAW;QACP,kHAA6F;QACjG,4DAAY;QAChB,4DAAiB;QACzB,4DAAM;QACN,2EAA8B;QAC1B,kFAAgB;QACZ,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,wEAAkF;QAClF,6EAAW;QACP,kHAAyF;QAC7F,4DAAY;QAChB,4DAAiB;QACpB,4DAAM;QACN,2EAA8B;QAC1B,8EAA8F;QAAA,kEAAM;QAAA,4DAAS;QACjH,4DAAM;QACN,2EAA+B;QAC5B,8EAA8E;QAAlB,6IAAS,UAAM,IAAC;QAAE,gEAAI;QAAA,4DAAS;QAC/F,4DAAM;QACN,4DAAO;QACX,4DAAM;;QA3CO,0DAAa;QAAb,uIAAa;QAEhB,0DAAyB;QAAzB,sFAAyB;QAMb,0DAAkD;QAAlD,kHAAkD;QAe9C,2DAAsD;QAAtD,sHAAsD;QAS1D,0DAAoD;QAApD,oHAAoD;QAKJ,0DAA+B;QAA/B,4FAA+B;;;;;;;;;;;;;;;;;;;;;;AC9B9F,MAAM,gBAAgB;IAG3B,YAAoB,OAA6B,EAAS,KAAY,EAAS,MAAqB;QAAhF,YAAO,GAAP,OAAO,CAAsB;QAAS,UAAK,GAAL,KAAK,CAAO;QAAS,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEzG,QAAQ;QACN,IAAI,CAAC,KAAK,GAAC,yBAAyB,GAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;IACxD,CAAC;IACD,MAAM;QACJ,IAAG,OAAO,CAAC,iCAAiC,CAAC,EAC7C;YACC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAC,QAAQ,CAAC;YAC7B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAChD,GAAE,EAAE,MAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,uBAAuB,CAAC,CACvD,CAAC;SACD;IACH,CAAC;IACD,OAAO;QACL,IAAG,OAAO,CAAC,iCAAiC,CAAC,EAC9C;YACC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAC,UAAU,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAChD,GAAE,EAAE,MAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,yBAAyB,CAAC,CACzD,CAAC;SACF;IACF,CAAC;IACF,IAAI;QACF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC,EAAC,UAAU,EAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC;IAChF,CAAC;;gFA5BU,gBAAgB;gGAAhB,gBAAgB;QCV7B,yEAAwC;QACpC,oEAA6D;QAC7D,yEAAuB;QACrB,wEAAuB;QAAA,uDAAgB;QAAA,4DAAK;QAC5C,uEAAqB;QAAA,uDAA8B;QAAA,4DAAI;QACvD,uEAAqB;QAAA,uDAA6B;QAAA,4DAAI;QACtD,uEAAqB;QAAA,wDAA0B;QAAA,4DAAI;QACnD,6EAA0D;QAAnB,yIAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAAC,6EAA8D;QAApB,yIAAS,aAAS,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAAC,6EAA4D;QAAjB,yIAAS,UAAM,IAAC;QAAC,gEAAI;QAAA,4DAAS;QACpO,4DAAM;QACR,4DAAM;;QARsB,0DAAa;QAAb,uIAAa;QAEd,0DAAgB;QAAhB,iFAAgB;QAClB,0DAA8B;QAA9B,wGAA8B;QAC9B,0DAA6B;QAA7B,uGAA6B;QAC7B,0DAA0B;QAA1B,oGAA0B;;;;;;;;;;;;;;;;;;;;ACE9C,MAAM,YAAY;IACvB,YAAoB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;IAAE,CAAC;;wEADzB,YAAY;4FAAZ,YAAY;QCRzB,2EAA+B;;;;;;;;;;;;;;ACA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACS;AAEU;AACL;AAIa;AACN;AAGR;AACT;AAC0B;AACvB;AACU;AACqB;AACI;AACD;AACU;AACZ;AACV;AACC;;AA2BtE,MAAM,WAAW;;sEAAX,WAAW;2FAAX,WAAW;+FAVZ;YACJ,4DAAY;YACZ,wEAAkB;YAClB,kEAAmB;YACnB,0DAAW;YACX,qEAAgB;YAChB,6EAAoB;YACpB,0EAAmB;SAAC;oIAGf,WAAW,mBAvBhB,gFAAiB;QACjB,+DAAc;QAClB,sFAAmB;QACvB,yFAAoB;QACpB,kEAAa;QACb,sGAAwB;QACxB,+GAA2B;QAC3B,mGAAuB;QACvB,0FAAoB;QACpB,kGAAiB;QACjB,qGAAkB;QAChB,yFAAgB,aAGV,4DAAY;QACZ,wEAAkB;QAClB,kEAAmB;QACnB,0DAAW;QACX,qEAAgB;QAChB,6EAAoB;QACpB,0EAAmB;;;;;;;;;;;;;AC3C3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;;;AAQ9B,MAAM,kBAAkB;IAG7B,YAAoB,IAAe,EAAS,OAAsB;QAA9C,SAAI,GAAJ,IAAI,CAAW;QAAS,YAAO,GAAP,OAAO,CAAe;QADlE,YAAO,GAAQ,+BAA+B;IACwB,CAAC;IAEvE,gBAAgB,CAAC,QAAe,EAAC,QAAe;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,IAAI,QAAQ,EAAE,CAAC;IACtE,CAAC;IACD,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IACjD,CAAC;IACD,OAAO,CAAC,OAAuB;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;IAC/D,CAAC;IAED,SAAS;QACP,OAAO,CAAC,OAAuB,EAAqC,EAAE;YACpE,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAC/B,0DAAG,CAAC,IAAI,GAAE;gBACR,OAAO,IAAI,EAAC,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YAC/C,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;IACH,CAAC;IAED,SAAS,CAAC,QAAe;QACvB,OAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,UAAU,CAAC,CAAC;IACvE,CAAC;IAED,OAAO,CAAC,IAAS;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,GAAG,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,CAAC;IACrD,CAAC;;oFA/BU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;ACTpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;;;;ICOhD,sEAAkE;IAAA,gFAAqB;IAAA,4DAAM;;;IAU7F,sEAAkE;IAAA,gFAAqB;IAAA,4DAAM;;;IAS7F,sEAAiE;IAAA,gFAAqB;IAAA,4DAAM;;;IAQxG,yEAA8C;IAC1C,kFAA0D;IAC9D,4DAAM;;AD1BP,MAAM,2BAA2B;IAQtC,YAAoB,OAAsB,EAAS,WAA8B;QAA7D,YAAO,GAAP,OAAO,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAmB;QAPjF,YAAO,GAAS,KAAK,CAAC;QACtB,SAAI,GAAM,IAAI,CAAC;QACf,iBAAY,GAAW,IAAI,wDAAS,CAAC;YACnC,WAAW,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrD,WAAW,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACnD,UAAU,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;IACkF,CAAC;IAEtF,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAChC,IAAI,GAAE,KAAI,CAAC,IAAI,GAAC,IAAI,CACrB,CAAC;IACJ,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;QAClB,IAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,KAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,EAAC;YAC3J,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAC,QAAQ,EAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAC,QAAQ,EAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,EAAC,CAAC,CAAC,SAAS,CAClH,GAAE,EAAE,GAAC,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC,MAAK,CAAC,kBAAkB,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,EAAC,CAC9E;SACF;aACG;YACF,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;YACnB,KAAK,CAAC,mDAAmD,CAAC;SAC3D;IACH,CAAC;;sGA1BU,2BAA2B;2GAA3B,2BAA2B;QCXxC,yEAAuB;QACnB,wEAA6B;QAAA,2EAAgB;QAAA,4DAAK;QAClD,0EAAuD;QAAtB,uJAAY,YAAQ,IAAC;QAClD,yEAA8B;QAC1B,iFAAgB;QACZ,4EAAW;QAAA,uEAAY;QAAA,4DAAY;QACnC,sEAA2E;QAC3E,4EAAW;QACP,yHAA6F;QACjG,4DAAY;QAChB,4DAAiB;QACrB,4DAAM;QAEN,0EAA8B;QAC1B,kFAAgB;QACZ,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,uEAA2E;QAC3E,6EAAW;QACP,yHAA6F;QACjG,4DAAY;QAChB,4DAAiB;QACrB,4DAAM;QACN,0EAA8B;QAC1B,kFAAgB;QACZ,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,uEAA6E;QAC7E,6EAAW;QACP,yHAA4F;QAChG,4DAAY;QAChB,4DAAiB;QACrB,4DAAM;QAEN,0EAAmC;QAC/B,6EAA8F;QAAA,kEAAM;QAAA,4DAAS;QACjH,4DAAM;QACN,0HAEM;QACV,4DAAO;QACX,4DAAM;;QArCI,0DAA0B;QAA1B,uFAA0B;QAMV,0DAA0D;QAA1D,0HAA0D;QAU1D,0DAA0D;QAA1D,0HAA0D;QAS1D,0DAAyD;QAAzD,yHAAyD;QAMV,0DAAgC;QAAhC,6FAAgC;QAElE,0DAAa;QAAb,6EAAa;;;;;;;;;;;;;;;;;;;;;;AC3B7C,MAAM,wBAAwB;IAEnC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gGALU,wBAAwB;wGAAxB,wBAAwB;QCRrC,yEAAuB;QACnB,wEAA6B;QAAA,2EAAgB;QAAA,4DAAK;QAClD,yEAAiB;QACb,yEAAsB;QACnB,2EAA+B;QAClC,4DAAM;QACN,yEAA2B;QACvB,4EAAiC;QACrC,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;;;;;;;;;;ACTN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AAEmB;AACV;AAEuB;AACC;AACrB;AACE;;AAwBtD,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAZJ;YACP,uEAAa;YACb,oEAAgB;YAChB,kEAAmB;YACnB,0DAAW;YACX,yEAAW;YACX,qEAAgB;YAChB,4FAAuB;YACvB,4FAAoB;YACpB,0EAAmB;SACpB;mIAKU,SAAS,mBAjBlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,kEAAmB;QACnB,0DAAW;QACX,yEAAW;QACX,qEAAgB;QAChB,4FAAuB;QACvB,4FAAoB;QACpB,0EAAmB;;;;;;;;;;;;;;;;;ACvBhB,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,yEAAyC;QACzC,yEAAiB;QACb,wEAAoB;QAAA,2EAAiB;QAAA,4DAAK;QAC9C,4DAAM;QACN,4DAAM;;;;;;;;;;;;;;ACHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACmB;AACvB;AAC0B;AACvB;AACmC;AACS;AACZ;AACT;;;AAE7E,MAAM,MAAM,GAAQ,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,+DAAc,EAAC,QAAQ,EAAC;YAC5D,EAAC,IAAI,EAAC,EAAE,EAAC,UAAU,EAAC,aAAa,EAAC,SAAS,EAAC,MAAM,EAAC;YACnD,EAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,kEAAa,EAAC;YACrC,EAAC,IAAI,EAAC,YAAY,EAAC,SAAS,EAAC,sFAAmB,EAAC;YACjD,EAAC,IAAI,EAAC,aAAa,EAAC,SAAS,EAAC,yFAAoB,EAAC;YACnD,EAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAC,yFAAoB,EAAC;YAChD,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,kGAAuB,EAAC;YAChD,EAAC,IAAI,EAAC,gBAAgB,EAAC,SAAS,EAAC,8GAA2B,EAAC;YAC7D,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,qGAAwB,EAAC;YACjD,EAAC,IAAI,EAAC,IAAI,EAAC,UAAU,EAAC,aAAa,EAAC,SAAS,EAAC,MAAM,EAAC;SACxD,EAAC,CAAC,CAAC;AAMG,MAAM,kBAAkB;;oFAAlB,kBAAkB;iGAAlB,kBAAkB;qGAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEZ,kBAAkB,uFAFlB,4DAAY;;;;;;;;;;;;;;;;;;;;;AClBlB,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCP3B,2EAA+B;QAC/B,2EAA+B;;;;;;;;;;;;;;ACA/B;AAAA;AAAA;AAAA;AAAuD;;;AAGvD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAC,UAAU,EAAC,UAAU,EAAC,SAAS,EAAC,MAAM,EAAC;IAChD,EAAC,IAAI,EAAC,SAAS,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,mMAA4C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,EAAC;IAC7G,EAAC,IAAI,EAAC,OAAO,EAAC,YAAY,EAAE,GAAG,EAAE,CAAC,mHAAwC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,EAAC;IACpG,EAAC,IAAI,EAAC,UAAU,EAAC,YAAY,EAAE,GAAG,EAAE,CAAC,yMAA8C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,EAAC;IAChH,EAAC,IAAI,EAAC,IAAI,EAAC,UAAU,EAAC,UAAU,EAAC,SAAS,EAAC,MAAM,EAAC;CACnD,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;ACbxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACU;AACD;AACL;AACM;AACD;AACJ;AACF;AACqB;AACd;AACa;AACX;AACa;AACjB;AACQ;AACN;AACI;AACM;AACR;AACE;AACI;AACD;AACT;AACE;AACF;AACA;AACuB;AACb;AACK;AACQ;AACrB;AACE;AACE;AACF;AACW;AACN;AACT;AACE;AACF;AACM;AACA;AACN;AACF;;AAmD5C,MAAM,oBAAoB;;wFAApB,oBAAoB;oGAApB,oBAAoB;wGA/C7B,4DAAU;QACV,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qEAAc;QACd,oFAAqB;QACrB,sEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,6EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB,uEAAc;QACd,uEAAe;QACf,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,oFAAoB;QACpB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,mEAAa;QACb,gEAAY;QACZ,sEAAe;oIAIN,oBAAoB,cA/C7B,4DAAU;QACV,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qEAAc;QACd,oFAAqB;QACrB,sEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,6EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB,uEAAc;QACd,uEAAe;QACf,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,oFAAoB;QACpB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,mEAAa;QACb,gEAAY;QACZ,sEAAe;;;;;;;;;;;;;;;;;;;;;;;IC5EP,qEAA6C;IAE3C,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,4EAA+C;IAApB,+UAAmB;IAAC,kEAAqE;IAAA,4DAAS;IAAA,4DAAK;IACxI,4DAAK;;;;IAJC,0DAAO;IAAP,yEAAO;IACP,0DAAc;IAAd,8EAAc;IACd,0DAAe;IAAf,+EAAe;;ACT1B,MAAM,kBAAkB;IAE7B,YAAoB,OAA2B;QAA3B,YAAO,GAAP,OAAO,CAAoB;QAD/C,WAAM,GAAS,EAAE,CAAC;IACiC,CAAC;IAEpD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,SAAS,CAChC,MAAM,GAAE,KAAI,CAAC,MAAM,GAAC,MAAM,CAC3B;IACH,CAAC;IACD,OAAO;QACL,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACD,MAAM,CAAC,EAAS;QACd,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CACrD,GAAE,EAAE;YACF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CACF;IACH,CAAC;;oFAlBU,kBAAkB;kGAAlB,kBAAkB;QDT/B,yEAA4B;QACxB,yEAAwC;QACpC,4EAA2D;QAApB,0IAAS,aAAS,IAAC;QAAC,kEAAO;QAAA,4DAAS;QAC/E,4DAAM;QACN,2EAAqB;QACjB,2EAA0B;QACxB,qEAAI;QACF,wEAAgB;QAAA,+DAAI;QAAA,4DAAK;QACzB,wEAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,yEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,yEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC7B,4DAAK;QACP,4DAAQ;QACR,yEAAO;QACH,+GAMK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;;QAT4B,2DAAU;QAAV,+EAAU;;;;;;;;;;;;;;;;;;;;AENrC,MAAM,mBAAmB;IAE9B,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QADnC,YAAO,GAAQ,gCAAgC,CAAC;IACT,CAAC;IACxC,QAAQ,CAAC,KAAW;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,IAAI,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IACD,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IACD,WAAW,CAAC,EAAS;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAQ,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,EAAE,CAAC;IACxD,CAAC;IACD,QAAQ,CAAC,IAAW;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,EAAE,CAAC;IACvD,CAAC;;sFAdU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;;;;;ICQhD,sEAA0D;IAAA,gFAAqB;IAAA,4DAAM;;;IAerF,sEAA8D;IAAA,oFAAyB;IAAA,4DAAM;;;IAS7F,sEAA4D;IAAA,kFAAuB;IAAA,4DAAM;;;IAYrG,yEAA8C;IAC1C,kFAA0D;IAC9D,4DAAM;;ADrCP,MAAM,mBAAmB;IAG9B,YAAoB,OAA6B;QAA7B,YAAO,GAAP,OAAO,CAAsB;QADjD,YAAO,GAAS,KAAK,CAAC;QAEtB,gBAAW,GAAW,IAAI,wDAAS,CAAC;YAClC,IAAI,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC5C,QAAQ,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAChD,MAAM,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAClE,IAAI,EAAC,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SAC7C,CAAC,CAAC;IANkD,CAAC;IAOtD,QAAQ;IACR,CAAC;IACD,aAAa,CAAC,KAAS;QACrB,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC;IACD,aAAa;QACX,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;QAClB,IAAI,OAAO,GAAS;YAClB,GAAG,EAAC,CAAC,CAAC;YACN,IAAI,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;YACvC,QAAQ,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YAC/C,MAAM,EAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK;YAC5C,GAAG,EAAC,EAAE;YACN,MAAM,EAAC,QAAQ;SAChB;QACD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAC3D,GAAE,EAAE,GAAC,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC,MAAK,CAAC,2BAA2B,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,EAAC,CACtF,CAAC;IACJ,CAAC;;sFA5BU,mBAAmB;mGAAnB,mBAAmB;QCVhC,yEAA6B;QACzB,wEAA6B;QAAA,uEAAY;QAAA,4DAAK;QAClD,0EAA6D;QAA7B,+IAAY,mBAAe,IAAC;QAEpD,yEAA+B;QAC3B,iFAAgB;QACZ,4EAAW;QAAA,uEAAY;QAAA,4DAAY;QACnC,sEAAoE;QACpE,4EAAW;QACP,iHAAqF;QACzF,4DAAY;QAChB,4DAAiB;QACrB,4DAAM;QACN,0EAA+B;QAC3B,qFAAkC;QAClC,6EAAW;QAAA,6EAAiB;QAAA,4DAAY;QACpC,iFAAwC;QACpC,iFAAgC;QAAA,uEAAW;QAAA,4DAAa;QACxD,kFAA4B;QAAA,mEAAO;QAAA,4DAAa;QAChD,kFAA4B;QAAA,mEAAO;QAAA,4DAAa;QAChD,kFAA4B;QAAA,mEAAO;QAAA,4DAAa;QAChD,kFAA2B;QAAA,kEAAM;QAAA,4DAAa;QAClD,4DAAa;QACb,6EAAW;QACP,iHAA6F;QACjG,4DAAY;QAChB,4DAAiB;QACrB,4DAAM;QACN,0EAA+B;QAC3B,kFAAgB;QACZ,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,wEAAkF;QAClF,6EAAW;QACP,iHAAyF;QAC7F,4DAAY;QAChB,4DAAiB;QACrB,4DAAM;QACN,0EAA+B;QAC3B,4EACA;QAAA,6EAA4E;QAAxD,mJAAU,yBAAqB,IAAC;QAApD,4DAA4E;QAChF,4DAAM;QACN,0EAA8B;QAE1B,8EAA6F;QAAA,kEAAM;QAAA,4DAAS;QAChH,4DAAM;QACN,kHAEM;QAEd,4DAAO;QACP,4DAAM;;QAhDA,0DAAyB;QAAzB,sFAAyB;QAOL,0DAAkD;QAAlD,kHAAkD;QAelD,2DAAsD;QAAtD,sHAAsD;QAStD,0DAAoD;QAApD,oHAAoD;QAUL,0DAA+B;QAA/B,4FAA+B;QAEjE,0DAAa;QAAb,6EAAa;;;;;;;;;;;;;;;;;;;;AC7CL;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n@NgModule({\n  exports:[\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n    \n  ]\n})\nexport class MaterialModuleModule { }\n","<div class=\"container\">\n    <h3 class=\"text-center mt-4\">User Management</h3>\n    <div class=\"row mx-auto mt-5\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Username:</mat-label>\n                <mat-select  (selectionChange)=\"onChange($event.value)\">\n                    <mat-option *ngFor=\"let user of users;let i=index\" [value]=\"user.username\">{{user.username}}</mat-option>\n                </mat-select>\n        </mat-form-field>\n        <table class=\"table table-dark mx-auto mt-5\">\n            <thead>\n              <tr>\n                <th scope=\"col\">slno</th>\n                <th scope=\"col\">name</th>\n                <th scope=\"col\">category</th>\n                <th scope=\"col\">amount</th>\n                <th scope=\"col\">status</th>\n              </tr>\n            </thead>\n            <tbody *ngIf=\"orders.length>0\">\n                <tr *ngFor=\"let order of orders;let i=index\">\n                    <td>{{i+1}}</td>\n                    <td>{{order.product.name}}</td>\n                    <td>{{order.product.category}}</td>\n                    <td>{{order.product.amount}}</td>\n                    <td>{{order.product.status}}</td>\n                </tr>\n            </tbody>\n        </table>\n        <div class=\"text-center\" *ngIf=\"orders.length===0\">No Orders found</div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Order } from 'src/app/interface/order/order';\nimport { User } from 'src/app/interface/user/user';\nimport { UserserviceService } from 'src/app/service/user/userservice.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  user:String=\"\";\n  users:User[]=[];\n  orders:Order[]=[];\n  constructor(private service:UserserviceService) { }\n\n  ngOnInit(): void {\n    this.service.getUsers().subscribe(\n      users=>this.users=users\n    );\n  }\n  onChange(name:string){\n    console.log('name changed');\n    this.service.getOrders(name).subscribe(\n      orders=>this.orders=orders\n    );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Offer } from 'src/app/interface/offer/offer';\nimport { OfferserviceService } from 'src/app/service/offer/offerservice.service';\n\n@Component({\n  selector: 'app-add-offer',\n  templateUrl: './add-offer.component.html',\n  styleUrls: ['./add-offer.component.css']\n})\nexport class AddOfferComponent implements OnInit {\n  success:boolean=false;\n  offerForm:FormGroup=new FormGroup({\n    code:new FormControl('',Validators.required),\n    offer:new FormControl('',Validators.required)\n  });\n  constructor(private service:OfferserviceService) { }\n\n  ngOnInit(): void {\n  }\n  submit(){\n    this.success=true;\n    let offer:Offer={\n      oid:+0,\n      code:this.offerForm.get('code').value,\n      offer:this.offerForm.get('offer').value\n    }\n    this.service.addOffer(offer).subscribe(\n      ()=>{\n        this.success=false;\n        alert(\"Offer Added Successfully\");\n        this.offerForm.reset();\n      }\n    )\n  }\n}\n","<h4 class=\"text-center my-5\">Add Offer !!</h4>\n<form [formGroup]=\"offerForm\" (ngSubmit)=\"submit()\">\n    <div class=\"row my-3\">\n        Code:\n        <input type=\"text\" formControlName=\"code\">\n    </div>\n    <div class=\"row my-3\">\n        Offer:\n        <input type=\"text\" formControlName=\"offer\">\n    </div>\n    <div class=\"row\">\n    <button type=\"submit\" class=\"btn btn-primmary btn-success mx-auto\" [disabled]=\"!offerForm.valid\">Submit</button>\n    </div>\n    <div class=\"row my-3\" *ngIf=\"success\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Cart } from 'src/app/interface/cart/cart';\nimport { Product } from 'src/app/interface/product/product';\nimport { User } from 'src/app/interface/user/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n  user:User=null;\n  sessionUser:BehaviorSubject<User>=new BehaviorSubject<User>(this.user);\n  cart:Cart[]=[];\n  sessionCart:BehaviorSubject<Cart[]>=new BehaviorSubject<Cart[]>(this.cart);\n  amount:number=0;\n  cartAmmount:BehaviorSubject<number>=new BehaviorSubject<number>(this.amount);\n  constructor() { }\n  addSession(user:User){\n    this.sessionUser.next(user);\n  }\n  addCart(product:Product,counter:number){\n    this.cart.push({product:product,counter:+counter});\n    this.sessionCart.next(this.cart);\n  }\n  deleteItem(i:number){\n    this.cart.splice(i,1);\n    this.sessionCart.next(this.cart);\n  }\n  deleteCart(){\n   this.cart=[];\n   this.sessionCart.next(this.cart);\n  }\n}\n","<div class=\"container text-center\">\n    <h2>Product View</h2>\n    <div  class=\"main\" *ngIf=\"success\">\n        <mat-spinner class=\"sub\"></mat-spinner>\n    </div>\n   <div class=\"row mt-4\">\n        <div class=\"col-lg-3 mb-3\" *ngFor=\"let product of products;let i=index\">\n            <app-product [product]=\"product\"></app-product>\n        </div>\n    </div> \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Product } from 'src/app/interface/product/product';\nimport { ProductserviceService } from 'src/app/service/product/productservice.service';\n\n@Component({\n  selector: 'app-view-product',\n  templateUrl: './view-product.component.html',\n  styleUrls: ['./view-product.component.css']\n})\nexport class ViewProductComponent implements OnInit {\n  success:boolean=true;\n  products:Product[]=[];\n  constructor(private service:ProductserviceService) { }\n\n  ngOnInit(): void {\n    this.service.getProducts().subscribe(\n      products=>this.products=products,\n      err=>console.log(err),\n      ()=>this.success=false\n    );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SessionService } from 'src/app/service/session/session.service';\n\n@Component({\n  selector: 'app-admin-nav',\n  templateUrl: './admin-nav.component.html',\n  styleUrls: ['./admin-nav.component.css']\n})\nexport class AdminNavComponent implements OnInit {\n\n  constructor(private session:SessionService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n  logout(){\n    this.session.addSession({username:'',password:''});\n    this.router.navigate(['/Landing']);\n  }\n}\n","\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container\">\n      \n      <a class=\"navbar-brand\" href=\"#\"><img src=\"assets/img/admin.png\" class=\"logo-img\">Admin</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\n        <ul class=\"nav\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['Home']\">Home</a>\n          </li>\n          <li class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              Product Manager\n            </a>\n            <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n              <li><a class=\"dropdown-item\" [routerLink]=\"['AddProduct']\">Add Product</a></li>\n              <li><a class=\"dropdown-item\" [routerLink]=\"['ViewProduct']\">View/Edit</a></li>\n              \n            </ul>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['Users']\">User Management</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['ChangePassword']\">Change Password</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['Offer']\">Offer Management</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link btn btn-md btn-danger\" (click)=\"logout()\" >LogOut</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from 'src/app/interface/product/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductserviceService {\n rootUrl:string='http://52.90.93.8:3500/products/'\n  constructor(private http:HttpClient) { }\n\n  getProducts():Observable<Product[]>{\n    return this.http.get<Product[]>(`${this.rootUrl}`)\n  }\n  addProducts(product:Product,file:File){\n    const uploadData = new FormData();\n    uploadData.append('img',file,file.name);\n    uploadData.append('product',JSON.stringify(product));\n   // this.data={product:product,file:uploadData};\n     return this.http.post<Product>(this.rootUrl,uploadData);\n    }\n    updateProduct(product:Product):Observable<Product>{\n      return this.http.put<Product>(this.rootUrl,product);\n    }\n    getProduct(id:number):Observable<Product>{\n     \n      return this.http.get<Product>(`${this.rootUrl}${id}`);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Product } from 'src/app/interface/product/product';\nimport { ProductserviceService } from 'src/app/service/product/productservice.service';\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit {\n  id:number;\n  image:any;\n  product:Product;\n  constructor(private active:ActivatedRoute,private route:Router,private service:ProductserviceService) { }\n  productForm:FormGroup=new FormGroup({\n    name:new FormControl('',Validators.required),\n    category:new FormControl('',Validators.required),\n    amount:new FormControl('',[Validators.required,Validators.min(1)])\n  });\n  ngOnInit(): void {\n    this.active.params.subscribe(\n      params=>this.id=params['id']\n    );\n    this.service.getProduct(this.id).subscribe(\n     product=>this.product=product,\n     err=>alert(\"Fetch Error\"),\n     ()=>{\n       this.productForm.setValue({\n        name:this.product.name,\n        category:this.product.category,\n        amount:this.product.amount\n       });\n       this.image='data:image/jpeg;base64,' + this.product.img; \n     }\n    );\n  }\n  submit(){\n    this.product.name=this.productForm.get('name').value;\n    this.product.amount=this.productForm.get('amount').value;\n    this.product.category=this.productForm.get('category').value;\n    this.service.updateProduct(this.product).subscribe(\n      ()=>{\n        alert(\"Product Updated Successfully\");\n        this.productForm.reset();\n      }\n    )\n  }\n\n  back(){\n    this.route.navigate(['/Admin','ViewProduct'])\n  }\n\n}\n","<div class=\"container text-center\">\n    <h2 class=\"py-5\">Product Edit Form !!</h2>\n    <div class=\"row mx-auto\">\n        <img [src]=\"image\" alt=\"image\" class=\"mx-auto\">\n    </div>\n    <form [formGroup]=\"productForm\" class=\"py-5\" (ngSubmit)=\"submit()\">\n    <div class=\"row mx-auto my-3\">\n        <mat-form-field>\n            <mat-label>Product Name</mat-label>\n            <input matInput placeholder=\"Enter Username\" formControlName=\"name\"> \n            <mat-error>\n                <div *ngIf=\"productForm.get('name').hasError('required')\">Product name Required</div>\n            </mat-error>\n        </mat-form-field>\n    </div>\n    <div class=\"row  mx-auto my-3\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Product Category:</mat-label>\n                <mat-select  formControlName=\"category\">\n                    <mat-option value=\"continental\">Continental</mat-option>\n                    <mat-option value=\"chinese\">Chinese</mat-option>\n                    <mat-option value=\"italian\">Italian</mat-option>\n                    <mat-option value=\"mexican\">Mexican</mat-option>\n                    <mat-option value=\"drinks\">Drinks</mat-option>\n                </mat-select>\n                <mat-error>\n                    <div *ngIf=\"productForm.get('category').hasError('required')\">Product category Required</div>\n                </mat-error>\n            </mat-form-field>\n    </div>\n    <div class=\"row my-3 mx-auto\">\n        <mat-form-field>\n            <mat-label>Product Amount</mat-label>\n            <input type=\"number\" matInput placeholder=\"Enter Amount\" formControlName=\"amount\"> \n            <mat-error>\n                <div *ngIf=\"productForm.get('amount').hasError('required')\">Product amount Required</div>\n            </mat-error>\n        </mat-form-field>\n     </div>\n     <div class=\"row mt-4 mx-auto\">\n         <button type=\"submit\" class=\"btn btn-md btn-success mx-auto\" [disabled]=\"!productForm.valid\" >Update</button>\n     </div>\n     <div class=\"row  mt-2 mx-auto\">\n        <button type=\"submit\" class=\"btn btn-md btn-danger mx-auto\" (click)=\"back()\" >Back</button>\n    </div>\n    </form>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Product } from 'src/app/interface/product/product';\nimport { ProductserviceService } from 'src/app/service/product/productservice.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n  @Input() product:Product;\n  image:any;\n  constructor(private service:ProductserviceService,private route:Router,private active:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.image='data:image/jpeg;base64,'+this.product.img;\n  }\n  enable(){\n    if(confirm(\"Are you sure you want to update\"))\n    {\n     this.product.status=\"Active\";\n     this.service.updateProduct(this.product).subscribe(\n       ()=>alert(`${this.product.name} is updated to Active`)\n     );\n     }\n   }\n   disable(){\n     if(confirm(\"Are you sure you want to update\"))\n    {\n     this.product.status=\"InActive\";\n     this.service.updateProduct(this.product).subscribe(\n       ()=>alert(`${this.product.name} is updated to InActive`)\n     );\n    }\n   }\n  edit(){\n    this.route.navigate(['Edit',this.product.pid],{relativeTo:this.active.parent})\n  }\n}\n","<div class=\"card\" style=\"width: 18rem;\">\n    <img class=\"card-img-top\" [src]=\"image\" alt=\"Card image cap\">\n    <div class=\"card-body\">\n      <h3 class=\"card-title\">{{product.name}}</h3>\n      <p class=\"card-text\">Category: {{product.category}}</p>\n      <p class=\"card-text\">Amount: {{product.amount}} Rs</p>\n      <p class=\"card-text\">Status: {{product.status}}</p>\n      <button class=\"btn btn-md btn-success\" (click)=\"enable()\">Enable</button> <button class=\"btn btn-md btn-danger m-2\" (click)=\"disable()\">Disable</button> <button class=\"btn btn-md btn-primary m-2\" (click)=\"edit()\">Edit</button>\n    </div>\n  </div>\n","import { Component, HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private router:Router){}\n  \n}\n","<router-outlet></router-outlet>\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatNativeDateModule } from \"@angular/material/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { AppRoutingModule } from \"src/app/app-routing.module\";\r\nimport { AddProductComponent } from \"./add-product/add-product.component\";\r\nimport { AdminNavComponent } from \"./admin-nav/admin-nav.component\";\r\n\r\n\r\nimport { AdminRoutingModule } from \"./admin-routing.module\";\r\nimport { AdminComponent } from \"./admin.component\";\r\nimport { EditProductComponent } from \"./edit-product/edit-product.component\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { MaterialModuleModule } from \"./material-module.module\";\r\nimport { AddOfferComponent } from \"./offer-management/add-offer/add-offer.component\";\r\nimport { OfferManagementComponent } from \"./offer-management/offer-management.component\";\r\nimport { ViewOfferComponent } from \"./offer-management/view-offer/view-offer.component\";\r\nimport { PasswordManagementComponent } from \"./password-management/password-management.component\";\r\nimport { UserManagementComponent } from \"./user-management/user-management.component\";\r\nimport { ProductComponent } from \"./view-product/product/product.component\";\r\nimport { ViewProductComponent } from \"./view-product/view-product.component\";\r\n\r\n@NgModule({\r\n    declarations:[\r\n        AdminNavComponent,\r\n        AdminComponent,\r\n    AddProductComponent,\r\nEditProductComponent,\r\nHomeComponent,\r\nOfferManagementComponent,\r\nPasswordManagementComponent,\r\nUserManagementComponent,\r\nViewProductComponent,\r\nAddOfferComponent,\r\nViewOfferComponent,\r\n  ProductComponent\r\n                   ],\r\n    imports:[\r\n        CommonModule,\r\n        AdminRoutingModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        MaterialModuleModule,\r\n        MatNativeDateModule],\r\n\r\n})\r\nexport class AdminModule{}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, ControlContainer, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Order } from 'src/app/interface/order/order';\nimport { User } from 'src/app/interface/user/user';\nimport { SessionService } from '../session/session.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserserviceService {\n  \n  rootUrl:String='http://52.90.93.8:3500/users/'\n  constructor(private http:HttpClient,private session:SessionService) { }\n\n  checkCredentials(username:string,password:string):Observable<User>{\n    return this.http.get<User>(`${this.rootUrl}${username}/${password}`)\n  }\n  getUsers():Observable<User[]>{\n    return this.http.get<User[]>(`${this.rootUrl}`)\n  }\n  getUser(control:AbstractControl):Observable<User>{\n    return this.http.get<User>(`${this.rootUrl}${control.value}`)\n  }\n\n  userExist():AsyncValidatorFn{\n    return (control:AbstractControl):Observable<ValidationErrors | null>=>{\n      return this.getUser(control).pipe(\n        map(user=>{\n          return user? { usernameExists: true } : null;\n        })\n      );\n    }\n  }\n\n  getOrders(username:string):Observable<Order[]>{\n    return  this.http.get<Order[]>(`${this.rootUrl}${username}/product`);\n  }\n\n  addUser(user:User):Observable<User>{\n    return this.http.post<User>(`${this.rootUrl}`,user)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from 'src/app/interface/user/user';\nimport { SessionService } from 'src/app/service/session/session.service';\nimport { UserserviceService } from 'src/app/service/user/userservice.service';\n\n@Component({\n  selector: 'app-password-management',\n  templateUrl: './password-management.component.html',\n  styleUrls: ['./password-management.component.css']\n})\nexport class PasswordManagementComponent implements OnInit {\n  success:boolean=false;\n  user:User=null;\n  passwordForm:FormGroup=new FormGroup({\n    oldpassword:new FormControl('',[Validators.required]),\n    newpassword:new FormControl('',Validators.required),\n    repassword:new FormControl('',Validators.required)\n  });\n  constructor(private service:SessionService,private userService:UserserviceService) { }\n\n  ngOnInit(): void {\n    this.service.sessionUser.subscribe(\n      user=>this.user=user\n    );\n  }\n  submit(){\n    this.success=true;\n    if(this.user.password===this.passwordForm.get('oldpassword').value && this.passwordForm.get('newpassword').value===this.passwordForm.get('repassword').value){\n      this.userService.addUser({username:this.user.username,password:this.passwordForm.get('repassword').value}).subscribe(\n        ()=>{this.success=false;alert(\"Password updated\");this.passwordForm.reset();}\n      )\n    }\n    else{\n      this.success=false;\n      alert(\"Invalid Old Password / New Password Doesn't Match\")\n    }\n  }\n}\n","<div class=\"container\">\n    <h3 class=\"text-center mt-4\">Password Form !!</h3>\n    <form [formGroup]=\"passwordForm\" (ngSubmit)=\"submit()\">\n        <div class=\"row my-3 mx-auto\">\n            <mat-form-field>\n                <mat-label>Old Password</mat-label>\n                <input matInput placeholder=\"Enter Username\" formControlName=\"oldpassword\"> \n                <mat-error>\n                    <div *ngIf=\"passwordForm.get('oldpassword').hasError('required')\">Old Password Required</div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n        \n        <div class=\"row my-3 mx-auto\">\n            <mat-form-field>\n                <mat-label>New Password</mat-label>\n                <input matInput placeholder=\"Enter Password\" formControlName=\"newpassword\"> \n                <mat-error>\n                    <div *ngIf=\"passwordForm.get('newpassword').hasError('required')\">New Password Required</div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"row my-3 mx-auto\">\n            <mat-form-field>\n                <mat-label>Re Password</mat-label>\n                <input matInput placeholder=\"Re Enter Password\" formControlName=\"repassword\"> \n                <mat-error>\n                    <div *ngIf=\"passwordForm.get('repassword').hasError('required')\">New Password Required</div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n        \n        <div class=\"row my-3 mx-auto my-3\">\n            <button type=\"submit\" class=\"btn btn-md btn-success mx-auto\" [disabled]=\"!passwordForm.valid\">Change</button>\n        </div>\n        <div class=\"row my-3 mx-auto\" *ngIf=\"success\">\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n        </div>\n    </form>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-offer-management',\n  templateUrl: './offer-management.component.html',\n  styleUrls: ['./offer-management.component.css']\n})\nexport class OfferManagementComponent implements OnInit {\n \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n \n}\n","<div class=\"container\">\n    <h3 class=\"text-center mt-3\">Offer Management</h3>\n    <div class=\"row\">\n        <div class=\"col-lg-4\">\n           <app-add-offer></app-add-offer>\n        </div>\n        <div class=\"col-lg-8 mt-5\">\n            <app-view-offer></app-view-offer>\n        </div>\n    </div>\n</div>\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModuleModule } from './material-module/material-module.module';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport { AdminModule } from './component/admin/admin.module';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AdminModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModuleModule,\n    MatNativeDateModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid text-center\">\n<div class=\"row\">\n    <h2 class=\"my-auto\">Welcome  Admin !!</h2>\n</div>\n</div>\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AddProductComponent } from \"./add-product/add-product.component\";\r\nimport { AdminComponent } from \"./admin.component\";\r\nimport { EditProductComponent } from \"./edit-product/edit-product.component\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { OfferManagementComponent } from \"./offer-management/offer-management.component\";\r\nimport { PasswordManagementComponent } from \"./password-management/password-management.component\";\r\nimport { UserManagementComponent } from \"./user-management/user-management.component\";\r\nimport { ViewProductComponent } from \"./view-product/view-product.component\";\r\n\r\nconst routes:Routes=[{path:'',component:AdminComponent,children:[\r\n    {path:'',redirectTo:'/Admin/Home',pathMatch:'full'},\r\n    {path:'Home',component:HomeComponent},\r\n    {path:'AddProduct',component:AddProductComponent},\r\n    {path:'ViewProduct',component:ViewProductComponent},\r\n    {path:'Edit/:id',component:EditProductComponent},\r\n    {path:'Users',component:UserManagementComponent},\r\n    {path:'ChangePassword',component:PasswordManagementComponent},\r\n    {path:'Offer',component:OfferManagementComponent},\r\n    {path:'**',redirectTo:'/Admin/Home',pathMatch:'full'}\r\n]}];\r\n\r\n@NgModule({\r\n    imports:[RouterModule.forChild(routes)],\r\n    exports:[RouterModule]\r\n})\r\nexport class AdminRoutingModule{}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-admin-nav></app-admin-nav>\n<router-outlet></router-outlet>\n\n  ","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n\nconst routes: Routes = [\n  {path:'',redirectTo:'/Landing',pathMatch:'full'},\n  {path:'Landing', loadChildren: () => import('./component/landing/landing.module').then(m => m.LandingModule)},\n  {path:'Admin',loadChildren: () => import('./component/admin/admin.module').then(m => m.AdminModule)},\n  {path:'Shopping',loadChildren: () => import('./component/shopping/shopping.module').then(m => m.ShoppingModule)},\n  {path:'**',redirectTo:'/Landing',pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n@NgModule({\n  exports:[\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n    \n  ]\n})\nexport class MaterialModuleModule { }\n","<div class=\"container mx-3\">\n    <div class=\"d-flex justify-content-end\">\n        <button class=\"btn btn-md btn-primary\" (click)=\"refresh()\">Refresh</button>\n    </div>\n    <table class=\"table\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">Slno</th>\n            <th scope=\"col\">Code</th>\n            <th scope=\"col\">Amount</th>\n            <th scope=\"col\">Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let offer of offers;let i=index\">\n              \n              <td>{{i+1}}</td>\n              <td>{{offer.code}}</td>\n              <td>{{offer.offer}}</td>\n              <td><button class=\"btn btn-sm\" (click)=\"delete(i)\"><i class=\"fa fa-minus-circle \" style=\"font-size:30px;color:red;\"></i></button></td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Offer } from 'src/app/interface/offer/offer';\nimport { OfferserviceService } from 'src/app/service/offer/offerservice.service';\n\n@Component({\n  selector: 'app-view-offer',\n  templateUrl: './view-offer.component.html',\n  styleUrls: ['./view-offer.component.css']\n})\nexport class ViewOfferComponent implements OnInit {\n  offers:Offer[]=[];\n  constructor(private service:OfferserviceService) { }\n\n  ngOnInit(): void {\n    this.service.getOffers().subscribe(\n      offers=>this.offers=offers\n    )\n  }\n  refresh(){\n    this.ngOnInit();\n  }\n  delete(id:number){\n    this.service.deleteOffer(this.offers[id].oid).subscribe(\n      ()=>{\n        this.offers.splice(id,1);\n      }\n    )\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Offer } from 'src/app/interface/offer/offer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OfferserviceService {\n  rootUrl:string=\"http://52.90.93.8:3500/offers/\";\n  constructor(private http:HttpClient) { }\n  addOffer(offer:Offer):Observable<Offer>{\n    return this.http.post<Offer>(this.rootUrl,offer);\n  }\n  getOffers():Observable<Offer[]>{\n    return this.http.get<Offer[]>(this.rootUrl);\n  }\n  deleteOffer(id:number):Observable<Offer>{\n    return this.http.delete<Offer>(`${this.rootUrl}${id}`)\n  }\n  getOffer(code:string):Observable<Offer>{\n    return this.http.get<Offer>(`${this.rootUrl}${code}`)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Product } from 'src/app/interface/product/product';\nimport { ProductserviceService } from 'src/app/service/product/productservice.service';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n  selectedFile:File;\n  success:boolean=false;\n  constructor(private service:ProductserviceService) { }\n  productForm:FormGroup=new FormGroup({\n    name:new FormControl('',Validators.required),\n    category:new FormControl('',Validators.required),\n    amount:new FormControl('',[Validators.required,Validators.min(1)]),\n    file:new FormControl('',Validators.required)\n  });\n  ngOnInit(): void {\n  }\n  onFileChanged(event:any){\n    this.selectedFile=event.target.files[0];\n  }\n  productSubmit(){\n    this.success=true;\n    let product:Product={\n      pid:+0,\n      name:this.productForm.get('name').value,\n      category:this.productForm.get('category').value,\n      amount:+this.productForm.get('amount').value,\n      img:'',\n      status:'Active'\n    }\n    this.service.addProducts(product,this.selectedFile).subscribe(\n      ()=>{this.success=false;alert(\"Product Added Succesfully\");this.productForm.reset();}\n    );\n  }\n}\n","<div class=\"container-fluid\">\n    <h1 class=\"text-center py-3\">Product Form</h1>\n<form [formGroup]=\"productForm\" (ngSubmit)=\"productSubmit()\">\n    \n        <div class=\"row  my-3 mx-auto\">\n            <mat-form-field>\n                <mat-label>Product Name</mat-label>\n                <input matInput placeholder=\"Enter Username\" formControlName=\"name\"> \n                <mat-error>\n                    <div *ngIf=\"productForm.get('name').hasError('required')\">Product name Required</div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"row  my-5 mx-auto\">\n            <mat-form-field appearance=\"fill\">\n            <mat-label>Product Category:</mat-label>\n                <mat-select  formControlName=\"category\">\n                    <mat-option value=\"continental\">Continental</mat-option>\n                    <mat-option value=\"chinese\">Chinese</mat-option>\n                    <mat-option value=\"italian\">Italian</mat-option>\n                    <mat-option value=\"mexican\">Mexican</mat-option>\n                    <mat-option value=\"drinks\">Drinks</mat-option>\n                </mat-select>\n                <mat-error>\n                    <div *ngIf=\"productForm.get('category').hasError('required')\">Product category Required</div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"row  my-3 mx-auto\">\n            <mat-form-field>\n                <mat-label>Product Amount</mat-label>\n                <input type=\"number\" matInput placeholder=\"Enter Amount\" formControlName=\"amount\"> \n                <mat-error>\n                    <div *ngIf=\"productForm.get('amount').hasError('required')\">Product amount Required</div>\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"row  my-3 mx-auto\">\n            Product Image:\n            <input type=\"file\"  (change)=\"onFileChanged($event)\" formControlName=\"file\">\n        </div>\n        <div class=\"row my-5 mx-auto\">\n         \n            <button type=\"submit\" class=\"btn btn-md btn-success mx-auto\" [disabled]=\"!productForm.valid\">Submit</button>\n        </div>\n        <div class=\"row my-3 mx-auto\" *ngIf=\"success\">\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n        </div>\n        \n</form>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}